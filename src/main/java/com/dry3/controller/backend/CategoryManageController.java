package com.dry3.controller.backend;import com.dry3.common.Const;import com.dry3.common.ResponseCode;import com.dry3.common.ServerResponse;import com.dry3.pojo.Category;import com.dry3.pojo.User;import com.dry3.service.ICategoryService;import com.dry3.service.IUserService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.ResponseBody;import javax.servlet.http.HttpSession;import java.util.List;/** * Created by dry3 */@Controller@RequestMapping("/manage/category")public class CategoryManageController {    @Autowired    private IUserService iUserService;    @Autowired    private ICategoryService iCategoryService;    /***     * 添加品类     * @param session     * @param categoryName     * @param parentId     * @return     */    @RequestMapping(value = "add_category.do")    @ResponseBody    public ServerResponse addCategory(HttpSession session, String categoryName, @RequestParam(value = "parentId", defaultValue = "0") Integer parentId) {        User currentUser = (User) session.getAttribute(Const.CURRENT_USER);        if (currentUser == null) {            return ServerResponse.createByErrorCodeMessage(ResponseCode.NEED_LOGIN.getCode(), "用户未登录,请登录");        }        //验证用户是否为管理员        if (iUserService.checkAdminRole(currentUser).isSuccess()){            //校验成功            return iCategoryService.addCategory(categoryName, parentId);        }        return ServerResponse.createByErrorMessage("非管理员,无权限操作");    }    /***     * 修改品类名称     * @param session     * @param categoryId     * @param categoryName     * @return     */    @RequestMapping(value = "update_category_name.do")    @ResponseBody    public ServerResponse updateCategoryName(HttpSession session, Integer categoryId, String categoryName) {        User currentUser = (User) session.getAttribute(Const.CURRENT_USER);        if (currentUser == null) {            return ServerResponse.createByErrorCodeMessage(ResponseCode.NEED_LOGIN.getCode(), "用户未登录,请登录");        }        //验证用户是否为管理员        if (iUserService.checkAdminRole(currentUser).isSuccess()){            //校验成功            return iCategoryService.updateCategoryName(categoryId, categoryName);        }        return ServerResponse.createByErrorMessage("非管理员,无权限操作");    }    /***     * 获取品类子节点(平级)     * @param session     * @param parentId     * @return     */    @RequestMapping(value = "list_category.do")    @ResponseBody    public ServerResponse<List<Category>> listChildrenParallelCategory(HttpSession session, @RequestParam(value = "parentId",defaultValue = "0")Integer parentId) {        User currentUser = (User) session.getAttribute(Const.CURRENT_USER);        if (currentUser == null) {            return ServerResponse.createByErrorCodeMessage(ResponseCode.NEED_LOGIN.getCode(), "用户未登录,请登录");        }        //验证用户是否为管理员        if (iUserService.checkAdminRole(currentUser).isSuccess()){            //校验成功, 获取平级子节点(同父节点),不递归            return iCategoryService.listChildrenParallelCategory(parentId);        }        return ServerResponse.createByErrorMessage("非管理员,无权限操作");    }    /***     * 获取当前分类id及递归子节点categoryId     * @param session     * @param categoryId     * @return     */    @RequestMapping(value = "list_deep_category.do")    @ResponseBody    public ServerResponse<List<Integer>> listChildrenDeeplCategory(HttpSession session, @RequestParam(value = "categoryId",defaultValue = "0")Integer categoryId) {        User currentUser = (User) session.getAttribute(Const.CURRENT_USER);        if (currentUser == null) {            return ServerResponse.createByErrorCodeMessage(ResponseCode.NEED_LOGIN.getCode(), "用户未登录,请登录");        }        //验证用户是否为管理员        if (iUserService.checkAdminRole(currentUser).isSuccess()){            //校验成功,获取当前分类id以及递归子节点categoryId            return iCategoryService.listChildrenDeeplCategory(categoryId);        }        return ServerResponse.createByErrorMessage("非管理员,无权限操作");    }}